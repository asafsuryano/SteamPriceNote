[{"C:\\steamProject\\my-app\\src\\index.js":"1","C:\\steamProject\\my-app\\src\\App.js":"2","C:\\steamProject\\my-app\\src\\reportWebVitals.js":"3"},{"size":503,"mtime":1611396806235,"results":"4","hashOfConfig":"5"},{"size":3573,"mtime":1613589819450,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1i8arxd",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\steamProject\\my-app\\src\\index.js",[],["17","18"],"C:\\steamProject\\my-app\\src\\App.js",["19","20","21","22","23"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport axios from 'axios';\n\n\nclass GameSearchResult extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  render(){\n    return(\n      <div>\n        {this.props.list.map((game)=><h3 key={game.name} onClick={this.props.onClick(game)}>{game.name}</h3>)}\n      </div>\n    )\n  }\n}\n\n\nclass Game extends React.Component{\n  render(){\n    return(\n    <div>\n      <li>\n      <h1>{this.props.value.name}</h1>\n      <h2>{this.props.value.price}</h2>\n      </li>\n    </div>\n    );\n  }\n}\n\nclass GameList extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={games:[]}\n    this.i=0;\n  }\n\n  loadList(){\n    axios.get(\"http://localhost:4000/load\")\n    .then((res)=>{\n      this.setState({games:res.data});\n    }).catch((err)=>console.log(err));\n  }\n\n  render(){\n    if (this.props.listState.loadedList===false){\n      this.props.listState.loadedList=true;\n      this.loadList();\n    }\n    return (\n    <div>\n      {this.state.games.map(gameItem=>(\n        <Game value={gameItem} key={gameItem.appid}/>\n      ))}\n    </div>\n    );\n  }\n}\n\nclass Search extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={};\n  }\n  searchGame(gameName){\n    axios.get(\"http://localhost:4000/search?gameName=\"+gameName).then((res)=>{\n      if (res.data.success==true){\n        this.setState({found:true});\n      }else{\n        this.setState({found:false})\n      }\n      this.props.change();\n    }).catch((err)=>console.log(err));\n  }\n\n  searchGamesNotSpecific(gamename){\n    axios.get(\"http://localhost:4000/searchAll?gameName=\"+gamename).then((res)=>{\n      this.setState({gameList:res.data});\n    })\n  }\n\n  addGameToList(game){\n    console.log(game)\n\n  }\n  renderList(){\n    if (this.state.gameList){\n      return (<div>\n        <GameSearchResult list={this.state.gameList} onClick={(chosen)=>this.addGameToList(chosen)}/>\n      </div>);\n    }\n  }\n  render(){\n    let message;\n    if (this.state){\n      if (this.state.found){\n        if (this.state.found==true){\n          message=\"game is found\";\n        }else{\n          message=\"game is not found\";\n        }\n      }else if (this.state.gameList){\n        if (this.state.gameList.length==0){\n          message=\"no games has been found matching the search criteria\"\n        }else{\n          message=\"here is the search result\"\n        }\n      }else{\n        message=\"please search for a game\";\n      }\n    }else{\n      message=\"please search for a game\";\n    }\n    return(\n    <div>\n      <form>\n        <input type=\"text\" onChange={(e)=>(this.setState({name:e.target.value}))}></input>\n      </form>\n      <button id=\"searchSpecific\" onClick={()=>{this.searchGame(this.state.name);}}>search game</button>\n      <button id=\"searchAllMatching\" onClick={()=>{this.searchGamesNotSpecific(this.state.name)}}>search not specific</button>\n      <p>{message}</p>\n      {this.renderList()}\n    </div>\n    )\n  }\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={loadedList:false};\n    this.change=this.change.bind(this);\n  }\n  change(){\n    if (this.state.loadedList){\n      this.setState({loadedList:false});\n    }else{\n      this.setState({loadedList:true});\n    }\n  }\n  render(){\n    return(\n      <div className=\"app-header\">\n        <div className=\"search-games\">\n          <Search change={this.change}/>\n        </div>\n        <div className=\"games-list\">\n          <GameList listState={this.state}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\steamProject\\my-app\\src\\reportWebVitals.js",[],["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":8,"nodeType":"32","messageId":"33","endLine":1,"endColumn":12},{"ruleId":"34","severity":1,"message":"35","line":8,"column":3,"nodeType":"36","messageId":"37","endLine":10,"endColumn":4},{"ruleId":"38","severity":1,"message":"39","line":70,"column":27,"nodeType":"40","messageId":"41","endLine":70,"endColumn":29},{"ruleId":"38","severity":1,"message":"39","line":100,"column":29,"nodeType":"40","messageId":"41","endLine":100,"endColumn":31},{"ruleId":"38","severity":1,"message":"39","line":106,"column":39,"nodeType":"40","messageId":"41","endLine":106,"endColumn":41},{"ruleId":"26","replacedBy":"42"},{"ruleId":"28","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["44"],["45"],"no-global-assign","no-unsafe-negation"]